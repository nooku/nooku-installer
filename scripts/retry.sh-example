#!/bin/bash

## This script will commit whatever work you have changed to this installer,
## and force the target application to be reset to HEAD. Then it will run composer install for debugging.
##
## This is very crude and heavy-handed and ONLY meant for testing!
##
## To configure the target Nooku framework :
## - Use the accompanied composer.json-example file in your root. (Either merge it into the existing composer.json or simply replace it). Make sure to remove composer.lock if present.
## - Setup the correct paths in this composer.json file.
## - If you have a repository clone, make sure to remove config/config.php from the .gitignore. (Otherwise you will lose the config.php on each "git clean" call, which will prevent the installer from working)

# Configuration options:
TARGET_PATH=/path/to/temporary/nooku/framework/setup
DATABASE_NAME=nookutmp
DATABASE_USER=root
DATABASE_PASSWORD=root

# Start script:
cd ../
REPOSITORY=`pwd`

if [[ ! -d "$TARGET_PATH" ]] ; then
    echo "$TARGET_PATH does not exist! Exiting."
    exit 1
fi

# Commit all changes if there are any
CHANGED=false
if ! git diff-index --quiet HEAD --; then
    CHANGED=true
fi

if $CHANGED ; then
    echo "Creating temporary commit in $REPOSITORY"
	git commit -a -m "Temporary commit"
fi

cd "$TARGET_PATH"

# Initialise the nooku framework repo
if [[ ! -d "$TARGET_PATH/.git" ]] ; then
    git init

    if [[ -f "$TARGET_PATH/.gitignore" ]] ; then
        TMP_FILE=`mktemp /tmp/config.XXXXXXXXXX`
        sed -e "s/config\/config.php//" "$TARGET_PATH/.gitignore" > $TMP_FILE

        mv $TMP_FILE "$TARGET_PATH/.gitignore"
    fi

    if [[ -f "$TARGET_PATH/composer.lock" ]] ; then
        rm  "$TARGET_PATH/composer.lock"
    fi

    mysqldump -u"$DATABASE_USER" -p"$DATABASE_PASSWORD" "$DATABASE_NAME" > "$DATABASE_NAME.sql"

    git add -A
    git commit -m "Initial commit"
fi

# Clean-up the target application folder
git clean -x -f -d
git reset --hard HEAD

if [[ -d "$TARGET_PATH/vendor/nooku/" ]] ; then
    rm -rf "$TARGET_PATH/vendor/nooku"
fi

# Re-install the database
if [[ -f "$DATABASE_NAME.sql" ]] ; then
    mysqladmin -u"$DATABASE_USER" -p"$DATABASE_PASSWORD" DROP "$DATABASE_NAME" --force
    mysqladmin -u"$DATABASE_USER" -p"$DATABASE_PASSWORD" --default-character-set=utf8 CREATE "$DATABASE_NAME"
    mysql -u"$DATABASE_USER" -p"$DATABASE_PASSWORD" "$DATABASE_NAME" < "$DATABASE_NAME.sql"
fi

# Show no mercy on the composer cache either
rm -rf ~/.composer/cache/

# Run composer
composer install --dev --verbose

# Reset !
cd "$REPOSITORY"

if $CHANGED ; then
	git reset --soft HEAD^
fi
